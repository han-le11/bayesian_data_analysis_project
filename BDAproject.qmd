---
title: "BDAproject"
format: pdf
editor: visual
---

```{r}
#library(aaltobda)
library(bayesplot)
library(dplyr)
library(ggplot2)
library(ggdist) # for stat_dotsinterval
library(posterior)
library(brms)

# Set more readable themes with bigger font for plotting packages.
ggplot2::theme_set(theme_minimal(base_size = 14))
bayesplot::bayesplot_theme_set(theme_minimal(base_size = 14))

# This registers CmdStan as the backend for compiling cmdstan-chunks.
# check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
register_knitr_engine(override = FALSE)

```

```{r}
housingData = read.csv('~data/housing-data.csv', header=TRUE)

housingData = housingData %>% 
  mutate(Age = 2023 - ProductionYear, 
         IncomeClass = round(Income, digits = -2)
         ) %>% 
  filter(Age <= 80)

```

```{r}
# some plots of the raw data
hist(housingData$Income)
hist(housingData$IncomeClass)
hist(housingData$Rooms)
hist(housingData$Size)
hist(housingData$Price)
hist(housingData$Age)

ggplot(data = housingData %>% filter(
  Age <= 80)) + 
  geom_point(aes(Age,Price, color = BuildingType))

ggplot(data = housingData %>% filter(
  Rooms <= 2, 
  Age <= 80)) + 
  geom_point(aes(Age,Price, color = BuildingType))

ggplot(data = housingData %>% filter(
  Rooms > 2, 
  Age <= 80)) + 
  geom_point(aes(Age,Price, color = BuildingType))

ggplot(data = housingData %>% filter(
  Age <= 80)) + 
  geom_point(aes(Size,Rooms, color = BuildingType), alpha = 0.5)
```

```{r}
# plots for each postal code
ggplot(data = housingData %>% filter(
  Age <= 80)) + 
  geom_point(aes(Age, PricePerSquare, color = BuildingType)) + facet_wrap(~IncomeClass)
```

```{r}
# Linear model with gaussian noise
housefit = brm(Price ~ Size + Age,
               data = housingData,
               family = gaussian(),
               prior = c(
                 prior(normal(5000, 1500), class = b, coef = Size),
                 prior(normal(-1000, 5000), class = b, coef = Age),
                 prior(normal(100000, 30000), class = Intercept)
                 ),
               refresh = 0
               )


print(housefit) # parameter estimates & convergence statistics
plot(housefit) # chain mixing & posterior distributions for parameters
pp_check(housefit) # posterior predictive check visualization
```

```{r}

# just my own visualization; can be skipped

ggplot(data = housingData %>% filter(
  Rooms <= 4, 
  Age <= 80, 
  BuildingType == 'kt')) + 
  geom_point(aes(Age,Price, color = Rooms)) + 
  geom_abline(intercept = 
                fixef(housefit)[1] + 
                fixef(housefit)[2]*mean(housingData$Size), 
              slope = 
                fixef(housefit)[3])

```

```{r}
# non-linear model with hierarchy. Non-linear models require the bf() around the model specification together with 'nl = TRUE'.
# the parameters of the model must be specified by b ~ 1 for example, or b ~ 1 + (1|z) if the parameter b varies in groups z.

housefit2 = brm(bf(Price ~ b1*Size + b2*Age + b3*Age^2 + b4,
                   b1 ~ 1, 
                   b2 ~ 1 + (1|PostalCode),
                   b3 ~ 1 + (1|PostalCode),
                   b4 ~ 1 + (1|PostalCode),
                   nl = TRUE
                   ),
               data = housingData,
               family = gaussian(),
               prior = c(
                 prior(normal(5000, 1500), nlpar = 'b1'),
                 prior(normal(-1000, 5000), nlpar = 'b2'),
                 prior(normal(0, 1000), nlpar = 'b3'),
                 prior(normal(100000, 30000), nlpar = 'b4')
                 ),
               refresh = 0
               )

print(housefit2)
pp_check(housefit2)
```

```{r}
plot(conditional_effects(housefit2), points = TRUE)
```

```{r}
coefs = coef(housefit2)
```

```{r}
vignette("brms_overview")
vignette("brms_multilevel")
```
