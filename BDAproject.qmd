---
title: "Bayesian Data Analysis project"
subtitle: "Housing price prediction"
bibliography: ref.bib
csl: ieee.csl
author: anonymous # <-- hand in anonymously
format:
  html:
    toc: true
    code-tools: true
    code-line-numbers: true
    number-sections: true
    mainfont: Georgia, serif
    page-layout: article
  pdf:  
    geometry:
    - left=1cm,top=1cm,bottom=1cm,right=3cm
    number-sections: true
    code-annotations: none
editor: source
link-citations: true
---

:::: {.content-hidden when-format="pdf"}
::: {.callout-warning collapse=true}

## Setup
```{r}
#| label: imports
library(aaltobda)
library(bayesplot)
library(dplyr)
library(ggplot2)
library(ggdist) # for stat_dotsinterval
library(posterior)
library(brms)
# Globally specfiy cmdstan backend for brms
options(brms.backend="cmdstanr")
# Tell brms to cache results if possible
options(brms.file_refit="on_change")

# Set more readable themes with bigger font for plotting packages.
ggplot2::theme_set(theme_minimal(base_size = 14))
bayesplot::bayesplot_theme_set(theme_minimal(base_size = 14))

# This registers CmdStan as the backend for compiling cmdstan-chunks.
# check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
# register_knitr_engine(override = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```
:::
::::

# Introduction
In February 2024, the Pellervo Economic Research (PTT) of Finland forecasts that the housing prices in Espoo will increase by 1.7\% because of the influx of people moving to Espoo @ptt2024. Prediction of housing prices helps individuals and businesses make informed decisions about buying, selling, or investing in housing properties. For people planning to buy a house in Espoo, housing price prediction helps with financial planning and estimating the mortgage. For real estate professionals, economists, and policymakers, housing price prediction provides insights into factors that influence housing supply and demand, as well as urban development patterns. For example, housing price predictive models can help identify areas with affordable housing options, address housing inequality, and promote inclusive urban development. In addition, for banks, mortgage lenders, and other financial organizations, predicting housing prices is essential for assessing the risk associated with lending and investment activities.

However, housing price prediction can be challenging. The relationships between housing attributes and prices may not be linear. Factors such as number of rooms and property size can interact in complex ways to influence prices.

In this project, our goal is to predict the Espoo housing prices with linear and non-linear models. Regarding the linear model, we first investigate two variablesâ€”the age and the size of the house. For the non-linear model, we also add hierarchy.

The structure of the report is as follows. Section 2 describes the data and the analysis problem. Section 3 describes the models and prior choices. Section 4 presents our analysis with the linear model. 


# Description of the data and the analysis
The housing price dataset is obtained from Asuntojen Hintatiedot @asunto, which can be translated into Price Information of Housing. This dataset can be viewed and downloaded from [here](https://drive.google.com/file/d/1VMD4fkEzAcP71FXoBq6P5i0Rme04AugG/view?usp=sharing). At the time of writing this report, to our knowledge, there are no existing analyses with this housing dataset.

There are 900 observations in the dataset. Each row contains information about a house. In the original dataset, there are 10 variables. However, to investigate the effect , we add a variable called $Age = 2023 - ProductionYear$ to compute the age of the house using the year it was produced. 

:::: {.content-hidden when-format="pdf"}
::: {.callout-warning collapse=true}

Hide this in the pdf because it looks hard to follow.
```{r}
housingData = read.csv('data/housing-data.csv', header=TRUE)
housingData = housingData %>% 
  mutate(Age = 2023 - ProductionYear, 
         IncomeClass = round(Income, digits = -2)
         ) %>% 
  filter(Age <= 80)
head(housingData, 5)
```
:::
::::

There are 8 empty cells in column \textit{Condition} and 30 in column \textit{LandOwnership}. However, these two parameters are not used for the Bayesian models in this report.


:::: {.content-hidden}
::: {.callout-warning collapse=true}
```{r}
# some plots of the raw data
hist(housingData$IncomeClass)
hist(housingData$Income)
hist(housingData$Rooms)
hist(housingData$Price)
```

```{r}
ggplot(data = housingData %>% filter(
  Age <= 80)) + 
  geom_point(aes(Age,Price, color = BuildingType))

ggplot(data = housingData %>% filter(
  Rooms <= 2, 
  Age <= 80)) + 
  geom_point(aes(Age,Price, color = BuildingType))

ggplot(data = housingData %>% filter(
  Rooms > 2, 
  Age <= 80)) + 
  geom_point(aes(Age,Price, color = BuildingType))

ggplot(data = housingData %>% filter(
  Age <= 80)) + 
  geom_point(aes(Size,Rooms, color = BuildingType), alpha = 0.5)
```
:::
::::

```{r}
hist(housingData$Size)
hist(housingData$Age)
```

```{r}
# plots for each postal code
ggplot(data = housingData %>% filter(
  Age <= 80)) + 
  geom_point(aes(Age, PricePerSquare, color = BuildingType)) + facet_wrap(~IncomeClass)
```

# Models and prior choices

## Linear model
In the linear model, we choose a normal prior of $(\mu = 5000, 1500)$ for the housing size.

## Non-linear model with hierarchy

# Analysis with the linear model

This section shows the code of our linear model with Gaussian noise and how the Markov chain Monte Carlo (MCMC) inference was run. We also shows the convergence diagnostic values for the linear model and their interpretation. In addition, we report posterior predictive checks.

## MCMC inference

```{r}
fit1 = brm(Price ~ Size + Age,
           data = housingData,
           family = gaussian(),
           prior = c(
             prior(normal(5000, 1500), class = b, coef = Size),
             prior(normal(-1000, 5000), class = b, coef = Age),
             prior(normal(100000, 30000), class = Intercept)
             ),
           refresh=0, 
           show_exceptions = FALSE,
           file="fit1.rds"
           )
```


:::: {.content-hidden when-format="pdf"}
::: {.callout-warning collapse=true}

```{r}
saveRDS(fit1, file="fit1")
```

:::: 
::: 

## Convergence diagnostic 
```{r}
rhat(fit1)
```

To obtain summaries and convergence diagnostic of the fitted linear model , we call the function `summary()`. 
```{r}
summary(fit1)
```
## Posterior predictive check

By using function `plot()`, we can plot the MCMC chains as well as the posterior distributions for each parameter. 
```{r}
plot(fit1)
``` 

```{r}
loo(fit1)
pp_check(fit1)
```

```{r}
ggplot(data = housingData %>% filter(
  Rooms <= 4, 
  Age <= 80, 
  BuildingType == 'kt')) + 
  geom_point(aes(Age,Price, color = Rooms)) + 
  geom_abline(intercept = 
                fixef(fit1)[1] + 
                fixef(fit1)[2]*mean(housingData$Size), 
              slope = 
                fixef(fit1)[3])
```

## Sensitivity analysis

Sensitivity analysis is conducted with respect to prior choices (i.e., checking whether the result changes a lot if prior is changed).



# Non-linear model

The structure of our analysis with the non-linear model is similar to that of the linear model. We first fit the model, then report convergence diagnostics, posterior predictive checks, and 

## MCMC inference
Non-linear models require the bf() around the model specification together with 'nl = TRUE'. The parameters of the model must be specified by b ~ 1 for example, or b ~ 1 + (1|z) if the parameter b varies in groups z.
```{r}
fit2 = brm(bf(Price ~ b1*Size + b2*Age + b3*Age^2 + b4,
                   b1 ~ 1, 
                   b2 ~ 1 + (1|PostalCode),
                   b3 ~ 1 + (1|PostalCode),
                   b4 ~ 1 + (1|PostalCode),
                   nl = TRUE
                   ),
           data = housingData,
           family = gaussian(),
           prior = c(
             prior(normal(5000, 1500), nlpar = 'b1'),
             prior(normal(-1000, 5000), nlpar = 'b2'),
             prior(normal(0, 1000), nlpar = 'b3'),
             prior(normal(100000, 30000), nlpar = 'b4')
             ),
           refresh = 0,
           show_exceptions = FALSE,
           file="fit2.rds"
           )
```

:::: {.content-hidden when-format="pdf"}
::: {.callout-warning collapse=true}

Hide the summary in the pdf because it looks hard to follow.

```{r}
saveRDS(fit2, file="fit2")
summary(fit2)
```
:::: 
::: 

## Convergence diagnostic 

To obtain summaries of the fitted model, we again apply function `summary()`. 


```{r}
plot(conditional_effects(fit2), points = TRUE)
```


```{r}
coefs = coef(fit2)
```

## Posterior predictive check

```{r}
loo(fit2)
pp_check(fit2)
```
## Sensitivity analysis


# Model comparison 

# Discussion

# Conclusion

# References

::: {#refs}
:::